//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _14_TimeMachine2.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using _14_TimeMachine2.Models;
    
    public partial class COURSE
    {
        public COURSE()
        {
            this.MEMBERs = new HashSet<MEMBER>();
            this.PROJECTs = new HashSet<PROJECT>();
        }
        [Key]
        public int course_id { get; set; }
        [Required]
        [StringLength(30, ErrorMessage = "Max 50 digits")]
        [Display(Name = "Course Name")]
        public string course_name { get; set; }
        [Required]
        [Display(Name = "Submit Day")]
        public int course_submit_day { get; set; }
        [Required]
        [Display(Name = "Date Created")]
        [DataType(DataType.DateTime)]
        public System.DateTime course_date_created { get; set; }
        [Required]
        [Display(Name = "Begin Date")]
        [DataType(DataType.Date)]
        public System.DateTime course_begin_date { get; set; }
        [Required]
        [Display(Name = "End Date")]
        [DataType(DataType.Date)]
        public System.DateTime course_end_date { get; set; }
        [Required]
        [Display(Name = "Enabled?")]
        public short course_is_enabled { get; set; }
        [Required]
        [Display(Name = "Grade")]
        public Nullable<double> course_ref_grade { get; set; }
        [Required]
        [Display(Name = "Hours")]
        public Nullable<double> course_ref_hours { get; set; }
    
        public virtual ICollection<MEMBER> MEMBERs { get; set; }
        public virtual ICollection<PROJECT> PROJECTs { get; set; }

        // ryoder [start]
        public bool is_enabled()
        {
            return (this.course_is_enabled == 1);
        }

        public void toggle_status()
        {
            this.course_is_enabled = (short)(this.course_is_enabled ^ 1);
            return;
        }

        public List<USER> getStudentsForCourse()
        {
            List<USER> studentList = new List<USER>();
            TM2Entities2 db = new TM2Entities2();

            foreach (MEMBER m in this.MEMBERs)
            {
                USER temp = db.USERs.Find(m.member_user_id);
                if (temp.is_student())
                    studentList.Add(temp);
            }

            // We still need the capability to sort by total hours
            //var stats = student.getCourseStatsForStudent(course.course_id);
            _14_TimeMachine2.Models.USER.USER_SortByLastName sortName = new _14_TimeMachine2.Models.USER.USER_SortByLastName();
            studentList.Sort(sortName);            

            return studentList;
        }

        public USER getTeacherForCourse()
        {
            USER teacher = new USER();
            USER temp;
            TM2Entities2 db = new TM2Entities2();

            foreach (MEMBER m in this.MEMBERs)
            {
                if ((temp = db.USERs.Find(m.member_user_id)).is_teacher())
                    teacher = temp;
            }

            return teacher;
        }
        // ryoder [end]
    }
}
